{"version":3,"sources":["C:/Users/bobi/FindARoomMate/src/app/authentication/authentication-routing.module.ts","C:/Users/bobi/FindARoomMate/src/app/authentication/authentication.module.ts","C:/Users/bobi/FindARoomMate/src/app/authentication/login/login.component.css","C:/Users/bobi/FindARoomMate/src/app/authentication/login/login.component.html","C:/Users/bobi/FindARoomMate/src/app/authentication/login/login.component.ts","C:/Users/bobi/FindARoomMate/src/app/authentication/logout/logout.component.css","C:/Users/bobi/FindARoomMate/src/app/authentication/logout/logout.component.html","C:/Users/bobi/FindARoomMate/src/app/authentication/logout/logout.component.ts","C:/Users/bobi/FindARoomMate/src/app/authentication/register/register.component.css","C:/Users/bobi/FindARoomMate/src/app/authentication/register/register.component.html","C:/Users/bobi/FindARoomMate/src/app/authentication/register/register.component.ts"],"names":[],"mappings":"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","file":"authentication.module.chunk.js","sourcesContent":["import { LogoutGuardService } from './../services/guards/logout-guard.service';\r\nimport { AuthGuardService } from './../services/guards/auth-guard.service';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'register', component: RegisterComponent, canActivate: [AuthGuardService] },\r\n  { path: 'login', component: LoginComponent, canActivate: [AuthGuardService] },\r\n  { path: 'logout', component: LogoutComponent, canActivate: [LogoutGuardService] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/bobi/FindARoomMate/src/app/authentication/authentication-routing.module.ts","import { LogoutGuardService } from './../services/guards/logout-guard.service';\r\nimport { AuthGuardService } from './../services/guards/auth-guard.service';\r\nimport { FormsModule } from '@angular/forms/';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AuthenticationRoutingModule,\r\n    SharedModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [RegisterComponent, LoginComponent, LogoutComponent],\r\n  providers: []\r\n})\r\nexport class AuthenticationModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/bobi/FindARoomMate/src/app/authentication/authentication.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#login-container {\\r\\n    margin-bottom: 10%;\\r\\n}\\r\\n\\r\\ninput.ng-invalid {\\r\\n    border-color: red;\\r\\n}\\r\\n\\r\\ninput.ng-valid {\\r\\n    border-color: green;\\r\\n}\\r\\n\\r\\n.login-button {\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.validation-feedback {\\r\\n    color: red;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/bobi/FindARoomMate/src/app/authentication/login/login.component.css\n// module id = ../../../../../src/app/authentication/login/login.component.css\n// module chunks = authentication.module","module.exports = \"<main id=\\\"login-container\\\">\\r\\n    <div class=\\\"container py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-4 mx-auto\\\">\\r\\n                <div class=\\\"card card-body\\\">\\r\\n                    <h3 class=\\\"text-center mb-4\\\">Sing in</h3>\\r\\n                    <form (ngSubmit)='onLoginSubmit()' #loginForm=ngForm>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"input-group has-error\\\">\\r\\n                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-users fa\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                                <input #usernameInput=ngModel required minLength=\\\"4\\\" class=\\\"form-control input-lg\\\" [(ngModel)]=\\\"user.username\\\" placeholder=\\\"Username\\\" name=\\\"firstName\\\" type=\\\"text\\\">\\r\\n                            </div>\\r\\n                            <label class=\\\"validation-feedback\\\" *ngIf=\\\"(usernameInput.errors && (usernameInput.dirty || usernameInput.touched)) || usernameInput.errors && mouseover\\\">\\r\\n                                        <span *ngIf=\\\"usernameInput.errors.required\\\">Username is required</span>\\r\\n                                        <span *ngIf=\\\"usernameInput.errors.minlength\\\">Username must be at least 4 characters </span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group has-success\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-lock fa-lg\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                                <input #passwordInput=ngModel class=\\\"form-control input-lg\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" type=\\\"password\\\" required minlength=\\\"8\\\" pattern=\\\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{5,}$\\\">\\r\\n                            </div>\\r\\n                            <label class=\\\"validation-feedback\\\" *ngIf=\\\"(passwordInput.errors && (passwordInput.dirty || passwordInput.touched)) || passwordInput.errors && mouseover\\\">\\r\\n                                    <span *ngIf=\\\"passwordInput.errors.required\\\">Password is required</span>\\r\\n                                    <span *ngIf=\\\"passwordInput.errors.minlength\\\">Password must be 8 characters long, we need another {{passwordInput.errors.minlength.requiredLength - passwordInput.errors.minlength.actualLength}} characters </span>\\r\\n                                    <span *ngIf=\\\"passwordInput.errors.pattern\\\">Password must contain at least one uppercase letter and at least one number.</span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <input [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" value=\\\"Sign Me In\\\" type=\\\"submit\\\">\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</main>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/bobi/FindARoomMate/src/app/authentication/login/login.component.html\n// module id = ../../../../../src/app/authentication/login/login.component.html\n// module chunks = authentication.module","import { UserStorageService } from './../../services/user-storage.service';\r\nimport { NotificationService } from './../../services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { UsersService } from './../../services/users.service';\r\nimport { User } from './../../models/user.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  public user: User;\r\n\r\n  constructor(\r\n    private usersService: UsersService,\r\n    private userStorageService: UserStorageService,\r\n    private router: Router,\r\n    private notificationService: NotificationService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user = new User();\r\n  }\r\n\r\n  onLoginSubmit(): void {\r\n    this.usersService.loginUser(this.user)\r\n      .map((r) => r.json())\r\n      .subscribe((response: any) => {\r\n        const { username, token, message, profilePicture } = response;\r\n        this.userStorageService.loginUser(username, token, profilePicture);\r\n\r\n        this.notificationService.showSuccess(message);\r\n        this.router.navigateByUrl('/');\r\n      },\r\n      (err) => {\r\n        const { message } = err;\r\n        this.notificationService.showError('Invalid username or password');\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/bobi/FindARoomMate/src/app/authentication/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/bobi/FindARoomMate/src/app/authentication/logout/logout.component.css\n// module id = ../../../../../src/app/authentication/logout/logout.component.css\n// module chunks = authentication.module","module.exports = \"<p>\\r\\n  logout works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/bobi/FindARoomMate/src/app/authentication/logout/logout.component.html\n// module id = ../../../../../src/app/authentication/logout/logout.component.html\n// module chunks = authentication.module","import { UserStorageService } from './../../services/user-storage.service';\r\nimport { NotificationService } from './../../services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\n\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    private readonly userStorageService: UserStorageService,\r\n    private readonly router: Router,\r\n    private readonly notificationService: NotificationService) { }\r\n\r\n  ngOnInit() {\r\n    this.userStorageService.logoutUser();\r\n    this.notificationService.showSuccess('You have logged out successfully');\r\n    this.router.navigateByUrl('/');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/bobi/FindARoomMate/src/app/authentication/logout/logout.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input.ng-invalid {\\r\\n    border-color: red;\\r\\n}\\r\\n\\r\\ninput.ng-valid {\\r\\n    border-color: green;\\r\\n}\\r\\n\\r\\n.login-button {\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.validation-feedback {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.left {\\r\\n    float: left;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/bobi/FindARoomMate/src/app/authentication/register/register.component.css\n// module id = ../../../../../src/app/authentication/register/register.component.css\n// module chunks = authentication.module","module.exports = \"<main>\\r\\n    <div class=\\\"container py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-4 mx-auto\\\">\\r\\n                <div class=\\\"card card-body\\\">\\r\\n                    <form (ngSubmit)='onRegisterSubmit()' #registerForm=ngForm>\\r\\n                        <div class=\\\"form-group has-error\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-user fa\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                                <input required minLength=\\\"3\\\" class=\\\"form-control input-lg\\\" #firstNameInput=ngModel [(ngModel)]=\\\"user.firstName\\\" placeholder=\\\"First name\\\" name=\\\"firstName\\\" type=\\\"text\\\">\\r\\n                            </div>\\r\\n                            <label class=\\\"validation-feedback\\\" *ngIf=\\\"(firstNameInput.errors && (firstNameInput.dirty || firstNameInput.touched)) || firstNameInput.errors && mouseover\\\">\\r\\n                                <span *ngIf=\\\"firstNameInput.errors.required\\\">First Name is required</span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group has-error\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-user fa\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                                <input required minlength=\\\"3\\\" class=\\\"form-control input-lg\\\" #lastNameInput=ngModel [(ngModel)]=\\\"user.lastName\\\" placeholder=\\\"Last name\\\" name=\\\"lastName\\\" type=\\\"text\\\">\\r\\n                            </div>\\r\\n                            <label class=\\\"validation-feedback\\\" *ngIf=\\\"(lastNameInput.errors && (lastNameInput.dirty || lastNameInput.touched)) || lastNameInput.errors && mouseover\\\">\\r\\n                                <span *ngIf=\\\"lastNameInput.errors.required\\\">Last Name is required</span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group has-error\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-users fa\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                                <input required minlength=\\\"4\\\" class=\\\"form-control input-lg\\\" #usernameInput=ngModel [(ngModel)]=\\\"user.username\\\" placeholder=\\\"Username\\\" name=\\\"username\\\" type=\\\"text\\\">\\r\\n                            </div>\\r\\n                            <label class=\\\"validation-feedback\\\" *ngIf=\\\"(usernameInput.errors && (usernameInput.dirty || usernameInput.touched)) || usernameInput.errors && mouseover\\\">\\r\\n                                <span *ngIf=\\\"usernameInput.errors.required\\\">Username is required</span>\\r\\n                                <span *ngIf=\\\"usernameInput.errors.minlength\\\">Username must be at least 4 characters </span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group has-success\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                                <input required class=\\\"form-control input-lg\\\" #emailInput=ngModel [(ngModel)]=\\\"user.email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" value=\\\"\\\" type=\\\"email\\\">\\r\\n                            </div>\\r\\n                            <label class=\\\"validation-feedback\\\" *ngIf=\\\"(emailInput.errors && (emailInput.dirty || emailInput.touched)) || emailInput.errors && mouseover\\\">\\r\\n                                <span *ngIf=\\\"emailInput.errors.required\\\">Email is required</span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group has-success\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-lock fa-lg\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                                <input #passwordInput=ngModel class=\\\"form-control input-lg\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" type=\\\"password\\\" required minlength=\\\"8\\\" pattern=\\\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{5,}$\\\">\\r\\n                            </div>\\r\\n                            <label class=\\\"validation-feedback\\\" *ngIf=\\\"(passwordInput.errors && (passwordInput.dirty || passwordInput.touched)) || passwordInput.errors && mouseover\\\">\\r\\n                                    <span *ngIf=\\\"passwordInput.errors.required\\\">Password is required</span>\\r\\n                                    <span *ngIf=\\\"passwordInput.errors.minlength\\\">Password must be 8 characters long, we need another {{passwordInput.errors.minlength.requiredLength - passwordInput.errors.minlength.actualLength}} characters </span>\\r\\n                                    <span *ngIf=\\\"passwordInput.errors.pattern\\\">Password must contain at least one uppercase letter and at least one number.</span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <!-- <div class=\\\"form-group has-success\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-lock fa-lg\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                                <input #passwordConfirmInput required class=\\\"form-control input-lg\\\" placeholder=\\\"Confirm Password\\\" name=\\\"password_confirm\\\" value=\\\"\\\" type=\\\"password\\\">\\r\\n                            </div>\\r\\n                            <label class=\\\"validation-feedback\\\" *ngIf=\\\"passwordInput.value != passwordConfirmInput.value\\\">\\r\\n                                    <span *ngIf=\\\"passwordInput.value != passwordConfirmInput.value\\\">Passwords do not match.</span>\\r\\n                            </label>\\r\\n                        </div> -->\\r\\n                        <div class=\\\"checkbox\\\">\\r\\n                            <label class=\\\"small\\\">\\r\\n                                <input name=\\\"terms\\\" class = \\\"checkbox-testing\\\" type=\\\"checkbox\\\">I have read and agree to the <a href=\\\"#\\\">terms of service</a>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <input class=\\\"btn btn-lg btn-primary btn-block\\\" [disabled]=\\\"!registerForm.valid\\\" value=\\\"Sign Me Up\\\" type=\\\"submit\\\">\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</main>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/bobi/FindARoomMate/src/app/authentication/register/register.component.html\n// module id = ../../../../../src/app/authentication/register/register.component.html\n// module chunks = authentication.module","import { NotificationService } from './../../services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { UsersService } from './../../services/users.service';\r\nimport { User } from './../../models/user.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  user: User;\r\n\r\n  constructor(\r\n    private readonly usersService: UsersService,\r\n    private readonly router: Router,\r\n    private readonly notificationService: NotificationService) { }\r\n\r\n  ngOnInit() {\r\n    this.user = new User();\r\n  }\r\n\r\n  onRegisterSubmit(): void {\r\n    this.usersService.registerUser(this.user)\r\n      .map(r => r.json())\r\n      .subscribe((responseObject) => {\r\n        const { message } = responseObject;\r\n\r\n        this.notificationService.showSuccess(message);\r\n        this.router.navigateByUrl('/auth/login');\r\n      }, (err) => {\r\n        const { message } = err;\r\n        this.notificationService.showError(message);\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/bobi/FindARoomMate/src/app/authentication/register/register.component.ts"],"sourceRoot":"webpack:///"}